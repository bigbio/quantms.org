"use strict";(self["webpackChunkquantms_org"]=self["webpackChunkquantms_org"]||[]).push([[749],{574:(e,a,t)=>{t(6422)},1739:(e,a,t)=>{t(6422)},5175:(e,a,t)=>{t.r(a),t.d(a,{default:()=>q});var l=t(7394),s=(t(6422),t(1880)),o=(t(8746),t(3698)),r=(t(1739),t(5333)),i=(t(574),t(8135)),n=t(641),u=t(3751),p=t(33),d=t(953),c=t(9263);const v=()=>(0,c.A)({method:"get",url:"/data/tissueJson.json.gz",responseType:"arraybuffer"}),h=()=>(0,c.A)({method:"get",url:"/data/cellJson.json.gz",responseType:"arraybuffer"});var g=t(3075),m=t(6744),f=t(5220);const y=e=>({trigger:"item",axisPointer:{type:"shadow"},textStyle:{},formatter:function(a){return["<div style='margin-bottom:5px;width:100%;border-radius:3px;text-align:center;family'><p>"+a.data[0]+" </p></div>",'<hr size=1 style="margin: 3px 0">',"<span style='text-align:left;color:#8f9a7a;margin-right:15px;'>Max:</span>"+parseFloat(a.data[5]).toFixed(2)+"<br/>","<span style='text-align:left;color:#8f9a7a;margin-right:15px;'>Q3:</span>"+parseFloat(a.data[4]).toFixed(2)+"<br/>","<span style='text-align:left;color:#8f9a7a;margin-right:15px;'>Median:</span>"+parseFloat(a.data[3]).toFixed(2)+"<br/>","<span style='text-align:left;color:#8f9a7a;margin-right:15px;'>Q1:</span>"+parseFloat(a.data[2]).toFixed(2)+"<br/>","<span style='text-align:left;color:#8f9a7a;margin-right:15px;'>Min:</span>"+parseFloat(a.data[1]).toFixed(2)+"<br/>","<span style='text-align:left;color:#8f9a7a;margin-right:15px;'>Samples:</span>"+(Array.isArray(e[0])?e[a.componentIndex][a.dataIndex]:e[a.dataIndex])+"<br/>"].join("")}}),x={title:[],dataset:[],tooltip:{},legend:{show:!0,orient:"vertical",right:10,top:60,data:[]},grid:{left:"10%",right:"10%",bottom:60},yAxis:{type:"category",boundaryGap:!0,nameGap:30,splitArea:{show:!1},splitLine:{show:!1}},xAxis:{type:"value",name:"iBAQLog",nameLocation:"center",nameGap:40,splitArea:{show:!1},splitLine:{show:!1},min:1},toolbox:{feature:{saveAsImage:{type:"png",title:"save as .png",pixelRatio:10}}},series:[]},b={class:"ae-visualization"},w={class:"visualization-header"},C={class:"organism-info"},F={class:"visualization-controls"},k={class:"protein-tags"},A={class:"history-section"},L={class:"history-content"},R={class:"history-item-title"},z={class:"visualization-card"},_={__name:"index",emits:["changeLoading"],setup(e,{emit:a}){const t=(0,f.rd)(),c=(0,d.KR)(!1),_=a;let E=500,K=[];const q=(0,d.KR)(!1),V=(0,d.KR)(!1),D=(0,d.KR)(!1),I=(0,d.KR)([]),S=(0,d.KR)(""),B=(0,d.KR)([]),N=(0,d.KR)([]),O=(0,d.KR)([]),U=(0,n.EW)((()=>O.value.map((e=>e.split("(")[0])))),$=["#8DD3C7","#EDBC63","#BEBADA","#FB8072","#80B1D3"],G=(0,d.KR)(null),W=(0,d.KR)([]);let X=null;const j=["heart","stomach","blood plasma","brain","kidney","liver","lung","pancreas","spleen","adrenal gland","testis","ovary","prostate","colon","esophagus","placenta"];B.value=Array.isArray(t.currentRoute.value.query.protein)?t.currentRoute.value.query.protein:[t.currentRoute.value.query.protein],S.value=t.currentRoute.value.name;const P=async()=>{_("changeLoading");const e="tissues"===S.value?await v():await h(),a=new Uint8Array(e.data),t=(0,g.UD)(a,{to:"string"});K=JSON.parse(t),_("changeLoading"),H(B)},T=e=>{I.value.splice(O.value.indexOf(e),1),O.value.splice(O.value.indexOf(e),1),"tissues"===S.value?t.push({path:"/baseline/tissues",query:{protein:U.value}}):t.push({path:"/baseline/cellline",query:{protein:U.value}})},H=e=>{if("undefined"===typeof e.value[0])return D.value=!1,void(X&&X.dispose());let a=K;e.value.map((e=>{const t=a.find((a=>a.name===e.trim()||a.gene_name===e.trim()));if(!t)return void alert("Please enter a legal protein name");let l=`${t.name}(${t.gene_name})`;O.value.includes(l.trim())||(5===O.value.length?(O.value.shift(),O.value.push(l),I.value.shift(),I.value.push(t)):(O.value.push(l),I.value.push(t)))})),O.value.length!=e.value.length?"tissues"===S.value?t.push({path:"/baseline/tissues",query:{protein:U.value}}):t.push({path:"/baseline/cellline",query:{protein:U.value}}):(D.value=!0,E=I.value.length>1?400*I.value.length:500,(0,n.dY)((()=>{M()})))};(0,f.V6)((e=>{B.value=e.query.protein,H(B)})),(0,n.sV)((()=>{P(),window.addEventListener("resize",ee)})),(0,n.hi)((()=>{X&&(X.dispose(),X=null),window.removeEventListener("resize",ee)}));const J=e=>{"tissues"===S.value&&e.tags.length<18&&j.map((a=>{e.tags.includes(a)||(e.tags.push(a),e.data.push([]))}));let a=[];for(let s=0;s<e.tags.length;s++){let t={};t["name"]=e.tags[s],t["data"]=e.data[s].filter((e=>e>=1)),a.push(t)}"tissues"!==S.value&&(a.sort(((e,a)=>{const t=e.data.length,l=a.data.length;return l-t})),a=a.slice(0,20)),a.sort(((e,a)=>{const t=e.data.length>0?e.data.reduce(((e,a)=>e+a))/e.data.length:0,l=e.data.length>0?a.data.reduce(((e,a)=>e+a))/a.data.length:0;return t-l}));let t=[],l=[];return a.map((e=>{t.push(e.data),l.push(e.name)})),{neatData:t,tags:l}},M=()=>{if(G.value&&D.value){null!=X&&""!==X&&void 0!==X&&X.dispose();try{if(X=m.Ts(G.value),X.clear(),1===I.value.length){x.dataset=[],x.series=[],x.title=[],x.legend.show=!1;let{neatData:e,tags:a}=J(I.value[0]);N.value=a,x.title.push({text:I.value[0].title,left:"center"});let{samples:t,data:l}=Q(e,2);q.value?(x.series.push({name:O.value[0],type:"bar",data:l,itemStyle:{color:$[0],color0:"#FA0000",borderColor:"#030609",borderColor0:"#030609"},label:{show:V.value,position:"right",formatter:function(){return`samples: ${t.shift()}`}}}),x.tooltip={trigger:"axis",axisPointer:{type:"shadow"}},x.yAxis.data=N.value):(x.dataset.push({source:e}),x.dataset.push({fromDatasetIndex:0,transform:{type:"boxplot",config:{itemNameFormatter:function(e){return a[e.value]}}}}),x.series.push({name:"category0",type:"boxplot",datasetIndex:1,itemStyle:{color:$[0],color0:"#FA0000",borderColor:"#030609",borderColor0:"#030609"}}),x.tooltip=y(t))}else{S.value,N.value=0===N.value.length?J(I.value[0]).tags:N.value,0===I.value.length?x.title=[]:x.title.splice(0,1,{text:`Comparison of protein expression in different ${S.value}`,left:"center"}),0===I.value.length?x.legend.show=!1:x.legend.show=!0;let e=[];I.value.map((a=>{let t=[];N.value.forEach((e=>{if(a.tags.includes(e)){let l=a.tags.indexOf(e),s=a.data[l].filter((e=>e>=1));t.push(s)}else t.push([])})),e.push(t)}));let{samples:a,data:t}=Q(e,3);q.value?(e=t,x.dataset=[],x.series=[],x.legend.data=[],e.forEach(((e,t)=>{x.series.push({name:O.value[t],type:"bar",data:e,itemStyle:{color:$[t],color0:"#FA0000",borderColor:"#030609",borderColor0:"#030609"},label:{show:V.value,position:"right",formatter:function(){return`samples: ${a[t].shift()}`}}}),x.legend.data.push({name:O.value[t],itemStyle:{color:$[t],borderColor:$[t]}})})),x.tooltip={trigger:"axis",axisPointer:{type:"shadow"}},x.yAxis.data=N.value):(x.dataset=[],x.series=[],x.legend.data=[],e.forEach(((a,t)=>{x.dataset.push({source:a}),x.series.push({name:O.value[t],type:"boxplot",datasetIndex:e.length+t,itemStyle:{color:$[t],color0:"#FA0000",borderColor:"#030609",borderColor0:"#030609"}}),x.legend.data.push({name:O.value[t],itemStyle:{color:$[t],borderColor:$[t]}})})),e.forEach(((e,a)=>{x.dataset.push({fromDatasetIndex:a,transform:{type:"boxplot",config:{itemNameFormatter:function(e){return N.value[e.value]}}}})})),x.tooltip=y(a))}X.resize({height:E}),X.setOption(x),(0,n.dY)((()=>{if(0!==B.value.length){let e=X.getDataURL({type:"svg",pixelRatio:2,backgroundColor:"#fff",excludeComponents:["toolbox"]}),a={proteinName:B.value,url:e};W.value.unshift(a)}}))}catch(e){console.error("Chart initialization failed:",e)}}},Q=(e,a)=>{if(2===a){let a=e.map((e=>e.length));return e=e.map((e=>e.length>0?Number((e.reduce(((e,a)=>e+a))/e.length).toFixed(2)):0)),{samples:a,data:e}}{let a=e.map((e=>e.map((e=>e.length))));return e=e.map((e=>e.map((e=>e.length>0?Number((e.reduce(((e,a)=>e+a))/e.length).toFixed(2)):0)))),{samples:a,data:e}}},Y=()=>{M()},Z=()=>{M()},ee=()=>{X&&X.resize()};return(e,a)=>{const t=i.qi,v=r.u,h=o.$g,g=s.Zq,m=l.pw;return(0,n.bo)(((0,n.uX)(),(0,n.CE)("div",b,[(0,n.Lk)("div",w,[(0,n.Lk)("div",C,[a[4]||(a[4]=(0,n.Lk)("h1",{class:"organism-title"},[(0,n.eW)("Organism: "),(0,n.Lk)("span",{class:"organism-name"},"Homo sapiens")],-1)),(0,n.Lk)("div",F,[(0,n.bF)(t,{modelValue:q.value,"onUpdate:modelValue":a[0]||(a[0]=e=>q.value=e),class:"visualization-switch","inline-prompt":"","active-text":"Bar","inactive-text":"Box",onChange:Y},null,8,["modelValue"]),(0,n.bo)((0,n.bF)(t,{modelValue:V.value,"onUpdate:modelValue":a[1]||(a[1]=e=>V.value=e),class:"visualization-switch label-switch","inline-prompt":"","active-text":"Show label","inactive-text":"Off label",onChange:Z},null,8,["modelValue"]),[[u.aG,q.value]])])]),(0,n.Lk)("div",k,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(O.value,((e,a)=>((0,n.uX)(),(0,n.Wv)(v,{key:a,round:"",closable:"",color:$[a],onClose:a=>T(e),class:"protein-tag"},{default:(0,n.k6)((()=>[(0,n.eW)((0,p.v_)(e),1)])),_:2},1032,["color","onClose"])))),128))]),(0,n.Lk)("div",A,[(0,n.bF)(h,{class:"history-button",type:"info",onClick:a[2]||(a[2]=e=>c.value=!0)},{default:(0,n.k6)((()=>a[5]||(a[5]=[(0,n.eW)(" History ")]))),_:1,__:[5]}),(0,n.bF)(m,{modelValue:c.value,"onUpdate:modelValue":a[3]||(a[3]=e=>c.value=e),title:"Visualization History",size:"50%"},{default:(0,n.k6)((()=>[(0,n.Lk)("div",L,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(W.value,((e,a)=>((0,n.uX)(),(0,n.CE)("div",{key:a,class:"history-item"},[(0,n.Lk)("h5",R,(0,p.v_)(e.proteinName.join(", ")),1),(0,n.bF)(g,{class:"history-image",src:e.url,fit:"contain","preview-src-list":[e.url]},null,8,["src","preview-src-list"])])))),128))])])),_:1},8,["modelValue"])])]),(0,n.Lk)("div",z,[(0,n.Lk)("div",{ref_key:"chart",ref:G,class:"chart-container",style:(0,p.Tr)({height:(0,d.R1)(E)+"px"})},null,4)])],512)),[[u.aG,D.value]])}}};var E=t(6262);const K=(0,E.A)(_,[["__scopeId","data-v-4a389306"]]),q=K},8746:(e,a,t)=>{t(6422)}}]);
//# sourceMappingURL=749.00e9efb7.js.map