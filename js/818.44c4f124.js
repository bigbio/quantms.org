"use strict";(self["webpackChunkquantms_org"]=self["webpackChunkquantms_org"]||[]).push([[818],{574:(e,a,t)=>{t(6422)},1739:(e,a,t)=>{t(6422)},8746:(e,a,t)=>{t(6422)},9928:(e,a,t)=>{t.r(a),t.d(a,{default:()=>K});var l=t(7394),s=(t(6422),t(1880)),o=(t(8746),t(3698)),n=(t(1739),t(5333)),i=(t(574),t(8135)),r=t(641),u=t(3751),d=t(33),p=t(953),c=t(9263);const h=()=>(0,c.A)({method:"get",url:"/data/tissueJson.json.gz",responseType:"arraybuffer"}),v=()=>(0,c.A)({method:"get",url:"/data/cellJson.json.gz",responseType:"arraybuffer"});var g=t(3075),m=t(6744),f=t(5220);const y=e=>({trigger:"item",axisPointer:{type:"shadow",shadowStyle:{color:"rgba(0,0,0,0.05)"}},backgroundColor:"rgba(255, 255, 255, 0.95)",borderColor:"#ccc",borderWidth:1,padding:[8,12],textStyle:{color:"#666",fontSize:13},formatter:function(a){return[`<div style='margin-bottom:8px;padding:4px 8px;background:#f5f7fa;border-radius:4px;font-weight:500;'>\n                    ${a.data[0]}\n                </div>`,'<hr style="margin: 5px 0; border:0; border-top: 1px solid #eee">',`<div style='display:grid;grid-template-columns:auto 1fr;gap:8px;align-items:center;'>\n                    <span style='color:#666;'>Max:</span>\n                    <span style='font-weight:500;'>${parseFloat(a.data[5]).toFixed(2)}</span>\n                    <span style='color:#666;'>Q3:</span>\n                    <span style='font-weight:500;'>${parseFloat(a.data[4]).toFixed(2)}</span>\n                    <span style='color:#666;'>Median:</span>\n                    <span style='font-weight:500;'>${parseFloat(a.data[3]).toFixed(2)}</span>\n                    <span style='color:#666;'>Q1:</span>\n                    <span style='font-weight:500;'>${parseFloat(a.data[2]).toFixed(2)}</span>\n                    <span style='color:#666;'>Min:</span>\n                    <span style='font-weight:500;'>${parseFloat(a.data[1]).toFixed(2)}</span>\n                    <span style='color:#666;'>Samples:</span>\n                    <span style='font-weight:500;'>${Array.isArray(e[0])?e[a.componentIndex][a.dataIndex]:e[a.dataIndex]}</span>\n                </div>`].join("")}}),b={title:[],dataset:[],tooltip:{},legend:{show:!0,orient:"vertical",right:10,top:60,data:[],textStyle:{fontSize:13,color:"#666"},itemGap:16,itemWidth:12,itemHeight:12,borderRadius:2},grid:{left:"12%",right:"12%",bottom:"10%",top:"15%",containLabel:!0},yAxis:{type:"category",boundaryGap:!0,nameGap:30,splitArea:{show:!1},splitLine:{show:!1},axisLine:{lineStyle:{color:"#ddd"}},axisLabel:{color:"#666",fontSize:12,margin:16}},xAxis:{type:"value",name:"iBAQ Log",nameLocation:"center",nameGap:40,nameTextStyle:{fontSize:13,fontWeight:500,color:"#666"},splitArea:{show:!1},splitLine:{show:!0,lineStyle:{type:"dashed",color:"#eee"}},axisLine:{show:!0,lineStyle:{color:"#ddd"}},axisLabel:{color:"#666",fontSize:11},min:1},toolbox:{feature:{saveAsImage:{type:"png",title:"Save as PNG",pixelRatio:2,backgroundColor:"#fff"}},right:20,top:20}},x={class:"ae-visualization"},w={class:"visualization-header"},k={class:"organism-info"},C={class:"visualization-controls"},L={class:"protein-tags"},F={class:"history-section"},S={class:"history-content"},z={class:"history-item-title"},R={class:"visualization-card"},A={__name:"index",emits:["changeLoading"],setup(e,{emit:a}){const t=(0,f.rd)(),c=(0,p.KR)(!1),A=a;let _=500,E=[];const K=(0,p.KR)(!1),$=(0,p.KR)(!1),q=(0,p.KR)(!1),V=(0,p.KR)([]),D=(0,p.KR)(""),I=(0,p.KR)([]),W=(0,p.KR)([]),B=(0,p.KR)([]),N=(0,r.EW)((()=>B.value.map((e=>e.split("(")[0])))),G=["#8DD3C7","#EDBC63","#BEBADA","#FB8072","#80B1D3"],O=(0,p.KR)(null),U=(0,p.KR)([]);let P=null;const T=["heart","stomach","blood plasma","brain","kidney","liver","lung","pancreas","spleen","adrenal gland","testis","ovary","prostate","colon","esophagus","placenta"];I.value=Array.isArray(t.currentRoute.value.query.protein)?t.currentRoute.value.query.protein:[t.currentRoute.value.query.protein],D.value=t.currentRoute.value.name;const X=async()=>{A("changeLoading");const e="tissues"===D.value?await h():await v(),a=new Uint8Array(e.data),t=(0,g.UD)(a,{to:"string"});E=JSON.parse(t),A("changeLoading"),H(I)},j=e=>{V.value.splice(B.value.indexOf(e),1),B.value.splice(B.value.indexOf(e),1),"tissues"===D.value?t.push({path:"/baseline/tissues",query:{protein:N.value}}):t.push({path:"/baseline/cellline",query:{protein:N.value}})},H=e=>{if("undefined"===typeof e.value[0])return q.value=!1,void(P&&P.dispose());let a=E;e.value.map((e=>{const t=a.find((a=>a.name===e.trim()||a.gene_name===e.trim()));if(!t)return void alert("Please enter a legal protein name");let l=`${t.name}(${t.gene_name})`;B.value.includes(l.trim())||(5===B.value.length?(B.value.shift(),B.value.push(l),V.value.shift(),V.value.push(t)):(B.value.push(l),V.value.push(t)))})),B.value.length!=e.value.length?"tissues"===D.value?t.push({path:"/baseline/tissues",query:{protein:N.value}}):t.push({path:"/baseline/cellline",query:{protein:N.value}}):(q.value=!0,_=V.value.length>1?400*V.value.length:500,(0,r.dY)((()=>{M()})))};(0,f.V6)((e=>{I.value=e.query.protein,H(I)})),(0,r.sV)((()=>{X(),window.addEventListener("resize",ee)})),(0,r.hi)((()=>{P&&(P.dispose(),P=null),window.removeEventListener("resize",ee)}));const J=e=>{"tissues"===D.value&&e.tags.length<18&&T.map((a=>{e.tags.includes(a)||(e.tags.push(a),e.data.push([]))}));let a=[];for(let s=0;s<e.tags.length;s++){let t={};t["name"]=e.tags[s],t["data"]=e.data[s].filter((e=>e>=1)),a.push(t)}"tissues"!==D.value&&(a.sort(((e,a)=>{const t=e.data.length,l=a.data.length;return l-t})),a=a.slice(0,20)),a.sort(((e,a)=>{const t=e.data.length>0?e.data.reduce(((e,a)=>e+a))/e.data.length:0,l=e.data.length>0?a.data.reduce(((e,a)=>e+a))/a.data.length:0;return t-l}));let t=[],l=[];return a.map((e=>{t.push(e.data),l.push(e.name)})),{neatData:t,tags:l}},M=()=>{if(O.value&&q.value){null!=P&&""!==P&&void 0!==P&&P.dispose();try{if(P=m.Ts(O.value),P.clear(),1===V.value.length){b.dataset=[],b.series=[],b.title=[],b.legend.show=!1;let{neatData:e,tags:a}=J(V.value[0]);W.value=a,b.title.push({text:V.value[0].title,left:"center"});let{samples:t,data:l}=Q(e,2);K.value?(b.series.push({name:B.value[0],type:"bar",data:l,itemStyle:{color:G[0],color0:"#FA0000",borderColor:"#030609",borderColor0:"#030609"},label:{show:$.value,position:"right",formatter:function(){return`samples: ${t.shift()}`}}}),b.tooltip={trigger:"axis",axisPointer:{type:"shadow"}},b.yAxis.data=W.value):(b.dataset.push({source:e}),b.dataset.push({fromDatasetIndex:0,transform:{type:"boxplot",config:{itemNameFormatter:function(e){return a[e.value]}}}}),b.series.push({name:"category0",type:"boxplot",datasetIndex:1,itemStyle:{color:G[0],color0:"#FA0000",borderColor:"#030609",borderColor0:"#030609"}}),b.tooltip=y(t))}else{D.value,W.value=0===W.value.length?J(V.value[0]).tags:W.value,0===V.value.length?b.title=[]:b.title.splice(0,1,{text:`Comparison of protein expression in different ${D.value}`,left:"center"}),0===V.value.length?b.legend.show=!1:b.legend.show=!0;let e=[];V.value.map((a=>{let t=[];W.value.forEach((e=>{if(a.tags.includes(e)){let l=a.tags.indexOf(e),s=a.data[l].filter((e=>e>=1));t.push(s)}else t.push([])})),e.push(t)}));let{samples:a,data:t}=Q(e,3);K.value?(e=t,b.dataset=[],b.series=[],b.legend.data=[],e.forEach(((e,t)=>{b.series.push({name:B.value[t],type:"bar",data:e,itemStyle:{color:G[t]},label:{show:$.value,position:"right",formatter:function(){return`samples: ${a[t].shift()}`}}}),b.legend.data.push({name:B.value[t],itemStyle:{color:G[t]}})})),b.tooltip={trigger:"axis",axisPointer:{type:"shadow"}},b.yAxis.data=W.value):(b.dataset=[],b.series=[],b.legend.data=[],e.forEach(((a,t)=>{b.dataset.push({source:a}),b.series.push({name:B.value[t],type:"boxplot",datasetIndex:e.length+t,itemStyle:{color:G[t],borderWidth:2,borderColor:"#333",borderRadius:2},boxWidth:[10,100],layout:"horizontal",emphasis:{itemStyle:{borderWidth:2.5,shadowBlur:4,shadowColor:"rgba(0,0,0,0.2)"}}}),b.legend.data.push({name:B.value[t],itemStyle:{color:G[t]}})})),e.forEach(((e,a)=>{b.dataset.push({fromDatasetIndex:a,transform:{type:"boxplot",config:{itemNameFormatter:function(e){return W.value[e.value]}}}})})),b.tooltip=y(a))}P.resize({height:_}),P.setOption(b),(0,r.dY)((()=>{if(0!==I.value.length){let e=P.getDataURL({type:"svg",pixelRatio:2,backgroundColor:"#fff",excludeComponents:["toolbox"]}),a={proteinName:I.value,url:e};U.value.unshift(a)}}))}catch(e){console.error("Chart initialization failed:",e)}}},Q=(e,a)=>{if(2===a){let a=e.map((e=>e.length));return e=e.map((e=>e.length>0?Number((e.reduce(((e,a)=>e+a))/e.length).toFixed(2)):0)),{samples:a,data:e}}{let a=e.map((e=>e.map((e=>e.length))));return e=e.map((e=>e.map((e=>e.length>0?Number((e.reduce(((e,a)=>e+a))/e.length).toFixed(2)):0)))),{samples:a,data:e}}},Y=()=>{M()},Z=()=>{M()},ee=()=>{P&&P.resize()};return(e,a)=>{const t=i.qi,h=n.u,v=o.$g,g=s.Zq,m=l.pw;return(0,r.bo)(((0,r.uX)(),(0,r.CE)("div",x,[(0,r.Lk)("div",w,[(0,r.Lk)("div",k,[a[4]||(a[4]=(0,r.Lk)("h1",{class:"organism-title"},[(0,r.eW)("Organism: "),(0,r.Lk)("span",{class:"organism-name"},"Homo sapiens")],-1)),(0,r.Lk)("div",C,[(0,r.bF)(t,{modelValue:K.value,"onUpdate:modelValue":a[0]||(a[0]=e=>K.value=e),class:"visualization-switch","inline-prompt":"","active-text":"Bar","inactive-text":"Box",onChange:Y},null,8,["modelValue"]),(0,r.bo)((0,r.bF)(t,{modelValue:$.value,"onUpdate:modelValue":a[1]||(a[1]=e=>$.value=e),class:"visualization-switch label-switch","inline-prompt":"","active-text":"Show label","inactive-text":"Off label",onChange:Z},null,8,["modelValue"]),[[u.aG,K.value]])])]),(0,r.Lk)("div",L,[((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(B.value,((e,a)=>((0,r.uX)(),(0,r.Wv)(h,{key:a,round:"",closable:"",color:G[a],onClose:a=>j(e),class:"protein-tag"},{default:(0,r.k6)((()=>[(0,r.eW)((0,d.v_)(e),1)])),_:2},1032,["color","onClose"])))),128))]),(0,r.Lk)("div",F,[(0,r.bF)(v,{class:"history-button",type:"info",onClick:a[2]||(a[2]=e=>c.value=!0)},{default:(0,r.k6)((()=>a[5]||(a[5]=[(0,r.eW)(" History ")]))),_:1,__:[5]}),(0,r.bF)(m,{modelValue:c.value,"onUpdate:modelValue":a[3]||(a[3]=e=>c.value=e),title:"Visualization History",size:"50%"},{default:(0,r.k6)((()=>[(0,r.Lk)("div",S,[((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(U.value,((e,a)=>((0,r.uX)(),(0,r.CE)("div",{key:a,class:"history-item"},[(0,r.Lk)("h5",z,(0,d.v_)(e.proteinName.join(", ")),1),(0,r.bF)(g,{class:"history-image",src:e.url,fit:"contain","preview-src-list":[e.url]},null,8,["src","preview-src-list"])])))),128))])])),_:1},8,["modelValue"])])]),(0,r.Lk)("div",R,[(0,r.Lk)("div",{ref_key:"chart",ref:O,class:"chart-container",style:(0,d.Tr)({height:(0,p.R1)(_)+"px"})},null,4)])],512)),[[u.aG,q.value]])}}};var _=t(6262);const E=(0,_.A)(A,[["__scopeId","data-v-fa353996"]]),K=E}}]);
//# sourceMappingURL=818.44c4f124.js.map